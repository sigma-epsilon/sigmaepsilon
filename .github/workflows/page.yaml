name: Build and Upload Documentation

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:
    name: Build Documentation
    runs-on: ubuntu-latest

    steps:
      # Step1: Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install Python and Poetry
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          sudo apt update
          sudo apt install pipx
          pipx ensurepath
          pipx install poetry

      # Step 3: Install dependencies using Poetry
      - name: Install dependencies
        run: |
          poetry install --with docs

      # Step 4: Build the Sphinx documentation
      - name: Build the documentation
        run: |
          cd docs
          poetry run make html

      # Step 5: Upload the built documentation as an artifact
      - name: Upload Sphinx documentation as artifact
        uses: actions/upload-artifact@v4
        with:
          name: sphinx-docs
          path: docs/build/html

  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
